#!/usr/bin/env ruby

require "csv"
require "json"
require "pathname"

class CodepenExporter
  def initialize(path)
    @path = Pathname(path)
  end

  def data
    @data ||= CSV.read(@path, headers: true)
  end

  def save!(name, ext, ext2, contents)
    return unless contents
    Pathname("exports").mkpath
    if ext2 and ext2 != "none"
      full_ext = "#{ext}.#{ext2}"
      # Optional, just some nicer aliases
      full_ext = "jsx" if full_ext == "js.babel"
      full_ext = "scss" if full_ext == "css.scss"
      full_ext = "haml" if full_ext == "html.haml"
      Pathname("exports/#{name}.#{full_ext}").write(contents)
    else
      Pathname("exports/#{name}.#{ext}").write(contents)
    end
  end

  def call
    data.each do |row|
      row = row.to_h
      if row["title"]
        name = "#{row["title"]} (#{row["slug_hash"]})".tr("/", " ")
      else
        name = "#{row["slug_hash"]}".tr("/", " ")
      end

      save! name, "html", row["html_pre_processor"], row.delete("html")
      save! name, "css", row["css_pre_processor"], row.delete("css")
      save! name, "js", row["js_pre_processor"], row.delete("js")

      save! name, "json", nil, JSON.pretty_generate(row)
    end
  end
end

unless ARGV.size == 1
  STDERR.puts "Usage: #{$0} id_Pens.csv"
  exit 1
end

CodepenExporter.new(ARGV[0]).call
